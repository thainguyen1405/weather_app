{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mastery JavaScript\\\\weather_app\\\\frontend\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [lat, setLat] = useState('');\n  const [lon, setLon] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  function handleInputChange(event) {\n    const value = event.target.value;\n    const [latitude, longitude] = value.split(',').map(coord => coord.trim());\n    setLat(latitude);\n    setLon(longitude);\n  }\n  const fetchWeather = () => {\n    setLoading(true);\n\n    // Check if user has entered coordinates manually\n    if (lat && lon) {\n      // Use manually entered coordinates\n      fetch(`http://localhost:8000/weather?lat=${lat}&lon=${lon}`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching weather data:', error);\n        setLoading(false);\n      });\n    } else {\n      // Get user's location only if no manual input\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          setLat(latitude);\n          setLon(longitude);\n\n          // Fetch weather data\n          fetch(`http://localhost:8000/weather?lat=${latitude}&lon=${longitude}`).then(response => response.json()).then(data => {\n            setWeatherData(data);\n            setLoading(false);\n          }).catch(error => {\n            console.error('Error fetching weather data:', error);\n            setLoading(false);\n          });\n        }, error => {\n          console.error('Error getting location:', error);\n          setLoading(false);\n          alert('Please allow location access or enter coordinates manually');\n        });\n      } else {\n        alert('Geolocation is not supported. Please enter coordinates manually');\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Background\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Breeze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Enter Latitude & Longitude\",\n        value: `${lat}, ${lon}`,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: fetchWeather,\n        children: loading ? 'Loading...' : 'Get Weather'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"J7LkQnLWYUU2O0bTvg9R1wqUoJo=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Weather","_s","lat","setLat","lon","setLon","weatherData","setWeatherData","loading","setLoading","handleInputChange","event","value","target","latitude","longitude","split","map","coord","trim","fetchWeather","fetch","then","response","json","data","catch","error","console","navigator","geolocation","getCurrentPosition","position","coords","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Mastery JavaScript/weather_app/frontend/src/Weather.js"],"sourcesContent":["import {useState} from 'react';\r\n\r\nfunction Weather() {\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function handleInputChange(event){\r\n        const value = event.target.value;\r\n        const [latitude, longitude] = value.split(',').map(coord => coord.trim());\r\n        setLat(latitude);\r\n        setLon(longitude);\r\n    }    const fetchWeather = () => {\r\n        setLoading(true);\r\n        \r\n        // Check if user has entered coordinates manually\r\n        if (lat && lon) {\r\n            // Use manually entered coordinates\r\n            fetch(`http://localhost:8000/weather?lat=${lat}&lon=${lon}`)\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setWeatherData(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error fetching weather data:', error);\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            // Get user's location only if no manual input\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        const latitude = position.coords.latitude;\r\n                        const longitude = position.coords.longitude;\r\n                        \r\n                        setLat(latitude);\r\n                        setLon(longitude);\r\n                        \r\n                        // Fetch weather data\r\n                        fetch(`http://localhost:8000/weather?lat=${latitude}&lon=${longitude}`)\r\n                            .then((response) => response.json())\r\n                            .then((data) => {\r\n                                setWeatherData(data);\r\n                                setLoading(false);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error fetching weather data:', error);\r\n                                setLoading(false);\r\n                            });\r\n                    },\r\n                    (error) => {\r\n                        console.error('Error getting location:', error);\r\n                        setLoading(false);\r\n                        alert('Please allow location access or enter coordinates manually');\r\n                    }\r\n                );\r\n            } else {\r\n                alert('Geolocation is not supported. Please enter coordinates manually');\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };return(\r\n        <div className = \"Background\">\r\n            <h1 className = \"heading\">Breeze</h1>\r\n            <div className = \"left-side\">\r\n                <input className = \"input\"\r\n                    type = 'text'\r\n                    placeholder = 'Enter Latitude & Longitude'\r\n                    value = {`${lat}, ${lon}`}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <button className = \"button\" onClick={fetchWeather}>\r\n                    {loading ? 'Loading...' : 'Get Weather'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}