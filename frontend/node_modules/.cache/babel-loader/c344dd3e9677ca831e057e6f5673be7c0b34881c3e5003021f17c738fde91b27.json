{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mastery JavaScript\\\\weather_app\\\\frontend\\\\src\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [lat, setLat] = useState('');\n  const [lon, setLon] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  function latInputChange(event) {\n    const value = event.target.value;\n    setLat(value);\n  }\n  function lonInputChange(event) {\n    const value = event.target.value;\n    setLon(value);\n  }\n  const fetchWeather = () => {\n    setLoading(true);\n\n    // Check if user has entered coordinates manually\n    if (lat && lon) {\n      // Use manually entered coordinates\n      fetch(`http://localhost:8000/weather?lat=${lat}&lon=${lon}`).then(response => response.json()).then(data => {\n        setWeatherData(data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching weather data:', error);\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n      alert('Please enter both latitude and longitude.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Breeze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lat-input\",\n          type: \"text\",\n          placeholder: \"Enter Latitude\",\n          value: lat,\n          onChange: latInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"lon-input\",\n          type: \"text\",\n          placeholder: \"Enter Longitude\",\n          value: lon,\n          onChange: lonInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: fetchWeather,\n          children: loading ? 'Loading...' : 'Get Weather'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather Properties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weatherData.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.wind_speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Direction: \", weatherData.wind_degrees, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cloud Percentage: \", weatherData.cloud_pct, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Feels Like: \", weatherData.feels_like, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Min Temperature: \", weatherData.min_temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Temperature: \", weatherData.max_temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sunrise: \", new Date(weatherData.sunrise * 1000).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sunset: \", new Date(weatherData.sunset * 1000).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#888'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter latitude and longitude to get weather information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"J7LkQnLWYUU2O0bTvg9R1wqUoJo=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Weather","_s","lat","setLat","lon","setLon","weatherData","setWeatherData","loading","setLoading","latInputChange","event","value","target","lonInputChange","fetchWeather","fetch","then","response","json","data","catch","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","temp","humidity","wind_speed","wind_degrees","cloud_pct","feels_like","min_temp","max_temp","Date","sunrise","toLocaleTimeString","sunset","style","textAlign","color","_c","$RefreshReg$"],"sources":["C:/Mastery JavaScript/weather_app/frontend/src/Weather.js"],"sourcesContent":["import {useState} from 'react';\r\nimport './Weather.css';\r\n\r\nfunction Weather() {\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function latInputChange(event){\r\n        const value = event.target.value;\r\n        setLat(value);\r\n    }\r\n\r\n    function lonInputChange(event){\r\n        const value = event.target.value;\r\n        setLon(value);\r\n    }\r\n    \r\n    \r\n    const fetchWeather = () => {\r\n    setLoading(true);\r\n        \r\n        // Check if user has entered coordinates manually\r\n        if (lat && lon) {\r\n            // Use manually entered coordinates\r\n            fetch(`http://localhost:8000/weather?lat=${lat}&lon=${lon}`)\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setWeatherData(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error fetching weather data:', error);\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            setLoading(false);\r\n            alert('Please enter both latitude and longitude.');\r\n        }\r\n    };    return(\r\n        <div className = \"background\">\r\n            <h1 className = \"heading\">Breeze</h1>\r\n            <div className = \"main-container\">\r\n                <div className = \"left-side\">\r\n                    <input className = \"lat-input\"\r\n                        type = 'text'\r\n                        placeholder = 'Enter Latitude'\r\n                        value = {lat}\r\n                        onChange = {latInputChange}\r\n                    />\r\n                    <input className = \"lon-input\"\r\n                        type = 'text'\r\n                        placeholder = 'Enter Longitude'\r\n                        value = {lon}\r\n                        onChange = {lonInputChange}\r\n                    />\r\n                    <button className = \"button\" onClick={fetchWeather}>\r\n                        {loading ? 'Loading...' : 'Get Weather'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className = \"right-side\">\r\n                    {weatherData ? (\r\n                        <div className = \"weather-info\">\r\n                            <h2>Weather Properties</h2>\r\n                            <p>Temperature: {weatherData.temp}°C</p>\r\n                            <p>Humidity: {weatherData.humidity}%</p>\r\n                            <p>Wind Speed: {weatherData.wind_speed} m/s</p>\r\n                            <p>Wind Direction: {weatherData.wind_degrees}°</p>\r\n                            <p>Cloud Percentage: {weatherData.cloud_pct}%</p>\r\n                            <p>Feels Like: {weatherData.feels_like}°C</p>\r\n                            <p>Min Temperature: {weatherData.min_temp}°C</p>\r\n                            <p>Max Temperature: {weatherData.max_temp}°C</p>\r\n                            <p>Sunrise: {new Date(weatherData.sunrise * 1000).toLocaleTimeString()}</p>\r\n                            <p>Sunset: {new Date(weatherData.sunset * 1000).toLocaleTimeString()}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div style={{textAlign: 'center', color: '#888'}}>\r\n                            <p>Enter latitude and longitude to get weather information</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Weather;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}